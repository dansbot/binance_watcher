apiVersion: apps/v1
kind: Deployment
metadata:
  name: btcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETHUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xrpusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XRPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bchusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BCHUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ltcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LTCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdtusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USDTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETHUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xrpusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XRPUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bchusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BCHUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ltcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LTCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bnbusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNBUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bnbusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNBUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ADAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BATUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xlmusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XLMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zrxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZRXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ADAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BATUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xlmusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XLMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zrxusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZRXUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LINKUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rvnusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RVNUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DASHUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zecusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZECUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALGOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iotausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - IOTAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busdusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BUSDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btcbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTCBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogeusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DOGEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wavesusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - WAVESUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atomusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ATOMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atomusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ATOMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vetusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VETUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qtumusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - QTUMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qtumusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - QTUMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nanousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NANOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ICXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enjusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ENJUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ontusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ontusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zilusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZILUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zilbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZILBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vetusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VETUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bnbbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNBBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xrpbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XRPBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETHBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algobusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALGOBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xtzusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XTZUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xtzbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XTZBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hbarusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - HBARUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hbarbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - HBARBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omgusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OMGUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omgbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OMGBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maticusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MATICUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maticbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MATICBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: repbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REPBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: repusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eosbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EOSBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eosusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EOSUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogeusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DOGEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kncusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KNCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kncusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KNCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vthousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VTHOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vthousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VTHOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USDCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - COMPUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - COMPUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MANAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hntusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - HNTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hntusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - HNTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mkrusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MKRUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mkrusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MKRUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: daiusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DAIUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oneusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oneusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bandusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BANDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bandusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BANDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storjusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - STORJUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storjusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - STORJUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busdusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BUSDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uniusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - UNIUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uniusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - UNIUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: solusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SOLUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: solusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SOLUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: egldusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EGLDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: egldusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EGLDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paxgusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PAXGUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paxgusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PAXGUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oxtusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OXTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oxtusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OXTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zenusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZENUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zenusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZENUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btcusdc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTCUSDC
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onebusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONEBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FILUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FILUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaveusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AAVEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaveusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AAVEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grtusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GRTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grtusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GRTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sushiusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SUSHIUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ankrusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ANKRUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ampusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AMPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shibusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SHIBUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shibbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SHIBBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crvusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CRVUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crvusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CRVUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axsusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AXSUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axsusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AXSUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: avaxusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AVAXUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: avaxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AVAXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctsiusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CTSIUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctsiusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CTSIUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DOTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DOTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yfiusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - YFIUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yfiusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - YFIUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 1inchusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - 1INCHUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 1inchusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - 1INCHUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftmusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FTMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftmusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FTMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USDCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethusdc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETHUSDC
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdcbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USDCBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maticusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MATICUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MANAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manabusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MANABUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALGOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adabusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ADABUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: solbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SOLBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LINKUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eosusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EOSUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zecusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZECUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enjusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ENJUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nearusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEARUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nearbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEARBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nearusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEARUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omgusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OMGUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sushiusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SUSHIUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lrcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LRCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lrcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LRCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kshibusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KSHIBUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lptusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LPTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lptbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LPTBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lptusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LPTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - POLYUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polybusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - POLYBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - POLYUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nmrusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NMRUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nmrusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NMRUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slpusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SLPUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slpusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SLPUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: antusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ANTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: antusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ANTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xnousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XNOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chzusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CHZUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chzusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CHZUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ognusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OGNUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ognusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OGNUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GALAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GALAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tlmusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TLMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tlmusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TLMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snxusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SNXUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SNXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AUDIOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AUDIOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ensusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ENSUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: requsdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REQUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: requsd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REQUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apeusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - APEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apeusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - APEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluxusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FLUXUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FLUXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trxbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TRXBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trxusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TRXUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TRXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cotiusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - COTIUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cotiusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - COTIUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voxelusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VOXELUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voxelusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VOXELUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RLCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RLCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ustusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ustusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bicousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BICOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bicousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BICOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api3usdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - API3USDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api3usd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - API3USD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ensusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ENSUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bntusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bntusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imxusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - IMXUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - IMXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spellusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SPELLUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spellusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SPELLUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jasmyusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - JASMYUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jasmyusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - JASMYUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FLOWUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FLOWUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gtcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GTCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gtcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GTCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thetausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - THETAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thetausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - THETAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tfuelusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TFUELUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tfuelusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TFUELUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oceanusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OCEANUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oceanusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OCEANUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laziousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LAZIOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laziousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LAZIOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: santosusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SANTOSUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: santosusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SANTOSUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpineusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALPINEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpineusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALPINEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PORTOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PORTOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: renusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RENUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: renusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RENUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celrusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CELRUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celrusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CELRUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sklusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SKLUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sklusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SKLUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: viteusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VITEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: viteusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VITEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waxpusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - WAXPUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waxpusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - WAXPUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ltousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LTOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ltousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LTOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fetusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FETUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fetusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FETUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bondusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BONDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bondusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BONDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lokausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LOKAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lokausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LOKAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icpusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ICPUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icpusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ICPUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OPUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OPUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: roseusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ROSEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: roseusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ROSEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CELOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CELOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kdausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KDAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kdausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KDAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksmusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KSMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksmusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KSMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: achusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ACHUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: achusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ACHUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: darusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DARUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: darusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DARUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rndrusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RNDRUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rndrusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RNDRUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sysusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SYSUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sysusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SYSUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RADUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RADUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ilvusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ILVUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ilvusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ILVUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ldousdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LDOUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ldousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LDOUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rareusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RAREUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rareusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RAREUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lskusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LSKUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lskusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LSKUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dgbusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DGBUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dgbusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DGBUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reefusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REEFUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reefusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REEFUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: srmusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SRMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: srmusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SRMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aliceusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALICEUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aliceusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALICEUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forthusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FORTHUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forthusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FORTHUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astrusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ASTRUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astrusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ASTRUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btrstusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTRSTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btrstusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTRSTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GALUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GALUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SANDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SANDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BALUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BALUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - POLYXUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glmusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GLMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glmusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GLMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clvusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CLVUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clvusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CLVUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusdusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TUSDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusdusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TUSDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qntusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - QNTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qntusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - QNTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stgusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - STGUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stgusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - STGUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axlusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AXLUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axlusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AXLUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KAVAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KAVAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aptusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - APTUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aptusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - APTUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maskusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MASKUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maskusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MASKUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bosonusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BOSONUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bosonusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BOSONUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pondusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PONDUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pondusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PONDUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: solusdc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SOLUSDC
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adausdc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ADAUSDC
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mxcusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MXCUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mxcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MXCUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jamusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - JAMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jamusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - JAMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PROMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PROMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diausdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DIAUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DIAUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loomusdt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LOOMUSDT
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loomusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LOOMUSD4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETHUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bchusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BCHUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ltcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LTCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdtusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USDTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bnbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ADAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: batusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BATUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ETCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xlmusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XLMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zrxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZRXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LINKUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rvnusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RVNUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DASHUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zecusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZECUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALGOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iotausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - IOTAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busdusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BUSDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wavesusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - WAVESUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atomusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ATOMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qtumusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - QTUMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ICXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enjusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ENJUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ontusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zilusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZILUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vetusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VETUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xtzusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XTZUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hbarusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - HBARUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omgusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OMGUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maticusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MATICUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eosusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EOSUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogeusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DOGEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kncusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KNCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vthousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VTHOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - USDCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - COMPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MANAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hntusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - HNTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mkrusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MKRUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: daiusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DAIUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oneusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ONEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bandusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BANDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storjusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - STORJUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uniusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - UNIUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: solusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SOLUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: egldusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - EGLDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paxgusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PAXGUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oxtusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OXTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zenusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ZENUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: filusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FILUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aaveusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AAVEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grtusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GRTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sushiusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SUSHIUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ankrusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ANKRUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crvusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CRVUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axsusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AXSUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: avaxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AVAXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctsiusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CTSIUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DOTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yfiusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - YFIUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 1inchusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - 1INCHUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftmusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FTMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nearusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NEARUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lrcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LRCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kshibusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KSHIBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lptusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LPTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nmrusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - NMRUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slpusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SLPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: antusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ANTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xnousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - XNOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chzusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CHZUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ognusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OGNUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GALAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tlmusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TLMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SNXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audiousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AUDIOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: requsd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REQUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apeusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - APEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FLUXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TRXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cotiusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - COTIUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voxelusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VOXELUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RLCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bicousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BICOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api3usd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - API3USD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ensusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ENSUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bntusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BNTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - IMXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spellusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SPELLUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jasmyusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - JASMYUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FLOWUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gtcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GTCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thetausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - THETAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tfuelusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TFUELUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oceanusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OCEANUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: laziousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LAZIOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: santosusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SANTOSUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpineusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALPINEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PORTOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: renusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RENUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celrusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CELRUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sklusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SKLUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: viteusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - VITEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: waxpusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - WAXPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ltousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LTOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fetusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FETUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bondusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BONDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lokausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LOKAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icpusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ICPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: opusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - OPUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: roseusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ROSEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CELOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kdausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KDAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksmusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KSMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: achusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ACHUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: darusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DARUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rndrusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RNDRUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sysusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SYSUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RADUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ilvusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ILVUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ldousd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LDOUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rareusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - RAREUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lskusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LSKUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dgbusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DGBUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reefusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - REEFUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aliceusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ALICEUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forthusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - FORTHUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: astrusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ASTRUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btrstusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BTRSTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: galusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GALUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - SANDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: balusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BALUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polyxusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - POLYXUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glmusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - GLMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clvusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - CLVUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tusdusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - TUSDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qntusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - QNTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stgusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - STGUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: axlusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - AXLUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kavausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - KAVAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aptusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - APTUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maskusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MASKUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bosonusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - BOSONUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pondusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PONDUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mxcusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - MXCUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jamusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - JAMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - PROMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diausd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - DIAUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loomusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - LOOMUSD
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
