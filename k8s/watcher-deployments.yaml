apiVersion: apps/v1
kind: Deployment
metadata:
  name: wavesusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - wavesusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sushiusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - sushiusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storjusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - storjusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maticusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - maticusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vthousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - vthousd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usdtusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - usdtusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - manausd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - linkusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iotausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - iotausd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hbarusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - hbarusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: egldusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - egldusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - compusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busdusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - busdusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: avaxusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - avaxusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: atomusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - atomusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: algousd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - algousd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zilusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - zilusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xtzusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - xtzusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ftmusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ftmusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ethusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ethusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - etcusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eosusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - eosusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enjusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - enjusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: btcusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - btcusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bnbusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - bnbusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bchusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - bchusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apeusd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - apeusd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adausd4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - adausd4
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ampusd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watcher
  template:
    metadata:
      labels:
        app: watcher
    spec:
      containers:
      - args:
        - ampusd
        - trade
        command:
        - python
        - run_socket.py
        envFrom:
        - configMapRef:
            name: watcher-config
        - configMapRef:
            name: postgres-config
        image: binance-watcher
        imagePullPolicy: Never
        name: watcher
